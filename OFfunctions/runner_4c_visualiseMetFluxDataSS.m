%%%plot MID concentration and fluxes for a give steady-state soln%%%
%%%additionally plot data and show residues if soln generated by optimisation%%%

OFspec = OpenFLUX.OFobjSpecification(mfilename,OFspecFileName);

load(strcat(OFspec.loadFolder,OFspec.fileName));

% return
if OF.isOptimisation%%%plot optimisation results
    if isempty(opSave.xFeas) && opSave.solnIndex == 0
        disp('at least a feasible soln is required')
        return
    elseif opSave.solnIndex==0
        solnToVisualise = opSave.xFeas;
    else
        solnToVisualise = opSave.xFitSeries(opSave.solnIndex).xFinish;
    end
    [f, EMUstate,flux,fMID_diff] = opSave.fitFxn(solnToVisualise);
    
    pFract = solnToVisualise(OF.opInput.pEntries);
    mid_outParsed = {};                       
    for i = 1:size(OF.dataMet,1)
        midSize = OF.dataMet{i,12};
        hitX = OF.dataMet{i,10};
        mid_SIM = EMUstate{hitX(1)}(hitX(2),:);
        
        %%add ISA unlabeled pool
        if OF.dataMet{i,15}~=0
            mid_SIM = mid_SIM*(1-pFract(OF.dataMet{i,15})) + OF.dataMet{i,13}*pFract(OF.dataMet{i,15});
        end
        
        midCorr_SIM = OF.dataMet{i,11}*mid_SIM';
        midCorr_SIM(OF.dataMet{i,14}) = 0;
        midCorr_SIM = midCorr_SIM/sum(midCorr_SIM);
        
        mid_outParsed{i,1} = regexprep(OF.dataMet{i,1},'_','\\_');%MID name
        mid_outParsed{i,2} = midCorr_SIM;%sim MID
        mid_outParsed{i,3} = OF.dataMet{i,2};%exp MID
        mid_outParsed{i,4} = OF.dataMet{i,3};%STDEV
        mid_outParsed{i,5} = fMID_diff(OF.dataMet{i,9}(:,2))'*fMID_diff(OF.dataMet{i,9}(:,2));%residual       
    end       
    
    
else%%%plot simulation results, no met data, no isotope correction
    simOutput = simSoln(OF,solnToVisualise);
    mid_outParsed = {};
    for i = 1:size(simOutput.EMUlist,1)
        emuName = regexprep(simOutput.EMUlist{i,1},'_','\\_');
        emutag = regexprep(num2str(simOutput.EMUlist{i,2}),' ','');
        mid_outParsed{i,1} = strcat([emuName '#' emutag]);
        mid_outParsed{i,2} = simOutput.EMUfract{i,1}';
    end
    flux = simOutput.flux;
    fMID_diff = [];
end

drawFig3(1,[],mid_outParsed,fMID_diff, OF,flux);